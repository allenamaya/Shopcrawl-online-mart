{"ast":null,"code":"var _jsxFileName = \"/home/john/Bootcamp/projects/Shopcrawl/client/src/components/home/home_products/SingleProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport ProductsContext from '../../context/ProductsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleProduct = ({\n  fProduct\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setProducts\n  } = useContext(ProductsContext);\n  const [formData, setFormData] = useState({\n    search_term: \" \"\n  });\n  async function searchItem(event) {\n    setFormData({\n      ...formData,\n      \"search_term\": fProduct.name\n    });\n    event.preventDefault();\n    if (formData.search_term === \" \") {\n      alert(\"Enter a search term\");\n    } else {\n      navigate('/loading');\n      let response = await fetch(\"/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        let data = await response.json();\n        console.log(data);\n        setProducts([...data]);\n      } else {\n        navigate(\"/error\");\n      }\n      formData.search_term = \" \";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"home-product\",\n    onClick: searchItem,\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      src: fProduct.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: fProduct.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleProduct, \"YRxabgYX2h7DUeOQOfXDKDdGyq8=\", false, function () {\n  return [useNavigate];\n});\n_c = SingleProduct;\nexport default SingleProduct;\nvar _c;\n$RefreshReg$(_c, \"SingleProduct\");","map":{"version":3,"names":["React","useContext","useState","Card","useNavigate","ProductsContext","jsxDEV","_jsxDEV","SingleProduct","fProduct","_s","navigate","setProducts","formData","setFormData","search_term","searchItem","event","name","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","className","onClick","children","Img","src","image","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","_c","$RefreshReg$"],"sources":["/home/john/Bootcamp/projects/Shopcrawl/client/src/components/home/home_products/SingleProduct.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { Card } from 'react-bootstrap'\nimport {useNavigate } from 'react-router-dom'\nimport ProductsContext from '../../context/ProductsContext'\n\nconst SingleProduct = ({fProduct}) => {\n  const navigate = useNavigate()\n  const {setProducts} = useContext(ProductsContext)\n\n  const [formData, setFormData] = useState(\n    {\n      search_term: \" \"\n    }\n  )\nasync function searchItem(event){\n  setFormData({...formData, \"search_term\": fProduct.name})\n  event.preventDefault();\n  if(formData.search_term === \" \"){\n    alert(\"Enter a search term\")\n  }else{\n      navigate('/loading')\n      let response = await fetch(\"/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      })\n      if(response.ok){\n      let  data = await response.json();\n      console.log(data)\n      setProducts([...data])\n      }else{\n        navigate(\"/error\")\n      }\n      formData.search_term = \" \"\n    }\n  \n}\n    \n  \n  return (\n    <Card className='home-product' onClick={searchItem}>\n    <Card.Img src={fProduct.image} ></Card.Img>\n    <Card.Body>\n      <Card.Title>{fProduct.name}</Card.Title>\n    </Card.Body>\n</Card>\n  )\n}\n\nexport default SingleProduct"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAAQC,WAAW,QAAQ,kBAAkB;AAC7C,OAAOC,eAAe,MAAM,+BAA+B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACQ;EAAW,CAAC,GAAGX,UAAU,CAACI,eAAe,CAAC;EAEjD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CACtC;IACEa,WAAW,EAAE;EACf,CACF,CAAC;EACH,eAAeC,UAAUA,CAACC,KAAK,EAAC;IAC9BH,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,aAAa,EAAEJ,QAAQ,CAACS;IAAI,CAAC,CAAC;IACxDD,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB,IAAGN,QAAQ,CAACE,WAAW,KAAK,GAAG,EAAC;MAC9BK,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,MAAI;MACDT,QAAQ,CAAC,UAAU,CAAC;MACpB,IAAIU,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ;MAC/B,CAAC,CAAC;MACF,IAAGQ,QAAQ,CAACO,EAAE,EAAC;QACf,IAAKC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACjCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBjB,WAAW,CAAC,CAAC,GAAGiB,IAAI,CAAC,CAAC;MACtB,CAAC,MAAI;QACHlB,QAAQ,CAAC,QAAQ,CAAC;MACpB;MACAE,QAAQ,CAACE,WAAW,GAAG,GAAG;IAC5B;EAEJ;EAGE,oBACER,OAAA,CAACJ,IAAI;IAAC8B,SAAS,EAAC,cAAc;IAACC,OAAO,EAAElB,UAAW;IAAAmB,QAAA,gBACnD5B,OAAA,CAACJ,IAAI,CAACiC,GAAG;MAACC,GAAG,EAAE5B,QAAQ,CAAC6B;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC3CnC,OAAA,CAACJ,IAAI,CAACwC,IAAI;MAAAR,QAAA,eACR5B,OAAA,CAACJ,IAAI,CAACyC,KAAK;QAAAT,QAAA,EAAE1B,QAAQ,CAACS;MAAI;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEP,CAAC;AAAAhC,EAAA,CA5CKF,aAAa;EAAA,QACAJ,WAAW;AAAA;AAAAyC,EAAA,GADxBrC,aAAa;AA8CnB,eAAeA,aAAa;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}