{"ast":null,"code":"var _jsxFileName = \"/home/john/Bootcamp/projects/Shopcrawl/client/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport Products from './products/Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [products, setProducts] = useState(null);\n  const [formData, setFormData] = useState({\n    search_item: \" \"\n  });\n  async function searchItem() {\n    let response = await fetch(\"/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    if (response.ok) {\n      let data = await response.json();\n      console.log(data);\n      setProducts([...data]);\n    }\n  }\n  function handleChange(event) {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: formData.search_item,\n          name: \"search_item\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: searchItem,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"+gozYMwR5Hd52vK9oIoXw3XbX7M=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Form","Button","Products","jsxDEV","_jsxDEV","Search","_s","products","setProducts","formData","setFormData","search_item","searchItem","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","handleChange","event","target","name","value","children","Group","Control","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/john/Bootcamp/projects/Shopcrawl/client/src/components/Search.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport Products from './products/Products'\n\nconst Search = () => {\n  const [products, setProducts] = useState(null)\n  const [formData, setFormData] = useState(\n      {\n        search_item: \" \"\n      }\n    )\n  async function searchItem(){\n    let response = await fetch(\"/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    })\n    if(response.ok){\n     let  data = await response.json();\n     console.log(data)\n     setProducts([...data])\n    }\n  }\n\n  function handleChange(event){\n    setFormData({...formData, [event.target.name]: event.target.value})\n  }\n    \n  return (\n    <div>\n      <Form>\n        <Form.Group>\n          <Form.Control type='text' value={formData.search_item} name=\"search_item\"  onChange={handleChange}></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Button onClick={searchItem}>Search</Button>\n        </Form.Group>\n      </Form>\n      <Products products={products}/>\n    </div>\n  )\n}\n\nexport default Search"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,IAAI,EAAEC,MAAM,QAAO,iBAAiB;AAC5C,OAAOC,QAAQ,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CACpC;IACEY,WAAW,EAAE;EACf,CACF,CAAC;EACH,eAAeC,UAAUA,CAAA,EAAE;IACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;IAC/B,CAAC,CAAC;IACF,IAAGI,QAAQ,CAACO,EAAE,EAAC;MACd,IAAKC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACjCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBb,WAAW,CAAC,CAAC,GAAGa,IAAI,CAAC,CAAC;IACvB;EACF;EAEA,SAASI,YAAYA,CAACC,KAAK,EAAC;IAC1BhB,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAE,CAACiB,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IAAK,CAAC,CAAC;EACrE;EAEA,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA,CAACJ,IAAI;MAAA8B,QAAA,gBACH1B,OAAA,CAACJ,IAAI,CAAC+B,KAAK;QAAAD,QAAA,eACT1B,OAAA,CAACJ,IAAI,CAACgC,OAAO;UAACC,IAAI,EAAC,MAAM;UAACJ,KAAK,EAAEpB,QAAQ,CAACE,WAAY;UAACiB,IAAI,EAAC,aAAa;UAAEM,QAAQ,EAAET;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC,eACblC,OAAA,CAACJ,IAAI,CAAC+B,KAAK;QAAAD,QAAA,eACT1B,OAAA,CAACH,MAAM;UAACsC,OAAO,EAAE3B,UAAW;UAAAkB,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACPlC,OAAA,CAACF,QAAQ;MAACK,QAAQ,EAAEA;IAAS;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAAAhC,EAAA,CAvCKD,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAyCZ,eAAeA,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}